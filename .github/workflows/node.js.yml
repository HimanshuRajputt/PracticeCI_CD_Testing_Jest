# name: Node.js CI & Deploy

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [18.x, 20.x, 22.x]

#     steps:
#     - uses: actions/checkout@v4

#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'

#     - run: npm ci
#     - run: npm run build --if-present

#     - name: Run Tests
#       run: npm test
#       env:
#         NODE_ENV: test
#         MONGO_URI: ${{ secrets.MONGO_URI }}

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test
#     if: success()  # Only run deploy if tests passed

#     steps:
#     - name: Trigger Render Deploy
#       run: curl -X GET "$RENDER_DEPLOY_HOOK"
#       env:
#         RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
name: CI Test & Docker Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm ci
      - run: npm run build --if-present

      - name: Run Tests
        run: npm test
        env:
          NODE_ENV: test
          MONGO_URI: ${{ secrets.MONGO_URI }}

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub using token
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-backend-test-1:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-backend-test-1:latest

  Render:
    runs-on: ubuntu-latest
    needs: docker
    if: success()

    steps:
      - name: Trigger Render Deploy
        run: curl -X GET "${{ secrets.RENDER_DEPLOY_HOOK_FOR_DOCKERIMAGE }}"
        
